environment {
  account = 152303423357
  region = us-east-1
  env = awsqa
  app = springhelloworldsite
  stackName = ${environment.app}-${environment.env}
}

vpc {
  name = directpl-non-prod
  securityGroupId = sg-5cfd1420
}

ecs {
  clusterName = ${environment.app}-cluster-${environment.env}
  taskName = ${environment.app}-task-${environment.env}
  taskCpu = 256
  taskMemoryLimitMiB = 512
  desiredCount = 2
}

container {
  // repo containing a service that listens on a known port
  repoArn = "arn:aws:ecr:us-east-1:152303423357:repository/springhelloworldsite"
  repoTag = latest
  containerPort = 8080
  hostPort = 8080
  envVars {
    spring_profiles_active = ${environment.env}
    ENV = ${environment.env}
    ASPNETCORE_ENVIRONMENT = ${environment.env}

    UIM_LOG_LEVEL = INFO

    // convention is StringParam|SSM-key-name to retrieve a value from the parameter store, does not support SecureString
    #paramStoreSomething = StringParam|SSM-webservice-demo-param-${environment.env}
  }
}

nlb {
  port = 443
  targetGroupPort = 8080
  healthCheckSeconds = 30
  internetFacing = true
  # If a cert is specified, port must be 443.  The cert must exist and be created outside this stack, as cert validation is slow.
  certArn = "arn:aws:acm:us-east-1:152303423357:certificate/099e001b-d850-4004-bdfe-c573a1285ec7"
  certDomain = "springhelloworldsite-awsqa.dir9633c.easn.morningstar.com"
}

route53 {
  domain = dir9633c.easn.morningstar.com.
  alias = ${environment.app}-${environment.env}
}


log {
  groupName = /aws/ecs/${environment.app}-${environment.env}-log
  streamPrefix = awslogs-${environment.app}-${environment.env}
}

tag {
  ENVIRONMENT = ${environment.env}
  SERVICEID = ts00142
  TID = UIM
  PID = PID0196
  ORG = Morningstar Cloud
  MANAGED = cloudformation
  FUNCTION = application
  BSId = Bus0214
  TSId = Ts00196
}